<!DOCTYPE html>
<html>
<head lang="ru" prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# website: http://ogp.me/ns/website#">
    <meta charset="utf-8">
    <title>17. Удаление коммитов из ветки</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">

            <link rel="alternate" href="../removing_commits_from_a_branch.htm" hreflang="x-default"/>
        <link rel="alternate" href="removing_commits_from_a_branch.htm" hreflang="ru"/>
        <link rel="alternate" href="../uk/removing_commits_from_a_branch.htm" hreflang="uk"/>
        <link rel="alternate" href="../pt-BR/removing_commits_from_a_branch.htm" hreflang="pt-BR"/>
    
            <link rel="canonical" href="removing_commits_from_a_branch.htm"/>
    
    
    <link rel="shortcut icon" href="../favicon.png" />

    <link href='https://fonts.googleapis.com/css?family=PT+Sans:400,700&amp;subset=latin,cyrillic' rel='stylesheet' type='text/css'>
<link href="../release/css/output.min.css" rel="stylesheet">
</head>
<body class="removing_commits_from_a_branch">
<div id="skip-link">
    <a href="removing_commits_from_a_branch.htm#main" class="element-invisible element-focusable">Skip to main content</a>
</div>
<div id="wrap">
    
    <nav class="navbar navbar-inverse" role="navigation">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-collapse-01">
                <span class="sr-only">Toggle navigation</span>
            </button>
            <a class="navbar-brand" href="../ru.htm">Обучение Git</a>
        </div>
        <div class="collapse navbar-collapse" id="navbar-collapse-01">
            

            <ul class="nav navbar-nav navbar-right">
                <li class="dropdown dropdown-menu-scrollable">
                    <a href="removing_commits_from_a_branch.htm#" title="Содержание" class="dropdown-toggle" data-toggle="dropdown"><i class="fa fa-list"></i> <span class="visible-inline-xs hidden-sm hidden-md hidden-lg">Содержание</span></a>
                    <div class="dropdown-menu">
                    </div>
                </li>
                <li class="dropdown">
                    <a href="../../index.html" title="Содержание" class="dropdown-toggle"><i class="fa fa-sign-out"
                            aria-hidden="true"></i> Назад в React</a>
                </li>
            </ul>
        </div>
    </div>
</nav>
    <div class="cart-placeholder"></div>

    <div id="main" class="container">
        <article class="text">
    <div class="container">
                <h1 class="title">17. Удаление коммитов из ветки</h1>

                    

                

        <h3>Цели</h3>

<ul><li>Научиться удалять самые последние коммиты из ветки</li></ul>

<p><code>Revert</code> из предыдущего раздела является мощной командой, которая позволяет отменить любые коммиты в репозиторий. Однако, и оригинальный и «отмененный» коммиты видны в истории ветки (при использовании команды <code>git log</code>).</p>

<p>Часто мы делаем коммит, и сразу понимаем, что это была ошибка. Было бы неплохо иметь команду «возврата», которая позволила бы нам сделать вид, что неправильного коммита никогда и не было. Команда «возврата» даже предотвратила бы появление нежелательного коммита в истории <code>git log</code>.</p>

<h2><em>01</em> Команда <code>reset</code></h2>

<p>Мы уже видели команду <code>reset</code> и использовали ее для согласования буферной зоны и выбранного коммита (мы использовали коммит <span class="caps">HEAD</span> в нашем предыдущем уроке).</p>

<p>При получении ссылки на коммит (т.е. хэш, ветка или имя тега), команда <code>reset</code>…</p>

<ol>
<li>Перепишет текущую ветку, чтобы она указывала на нужный коммит</li>
<li>Опционально сбросит буферную зону для соответствия с указанным коммитом</li>
<li>Опционально сбросит рабочий каталог для соответствия с указанным коммитом</li>
</ol>

<h2><em>02</em> Проверьте нашу историю</h2>

<p>Давайте сделаем быструю проверку нашей истории коммитов.</p>

<h4 class="h4-pre">Выполните:</h4>

<pre class="instructions">git hist</pre>

<h4 class="h4-pre">Результат:</h4>

<pre class="sample">$ git hist
* 45fa96b 2011-03-09 | Revert "Oops, we didn't want this commit" (HEAD, master) [Alexander Shvets]
* 846b90c 2011-03-09 | Oops, we didn't want this commit [Alexander Shvets]
* fa3c141 2011-03-09 | Added HTML header (v1) [Alexander Shvets]
* 8c32287 2011-03-09 | Added standard HTML page tags (v1-beta) [Alexander Shvets]
* 43628f7 2011-03-09 | Added h1 tag [Alexander Shvets]
* 911e8c9 2011-03-09 | First Commit [Alexander Shvets]</pre>

<p>Мы видим, что два последних коммита в этой ветке - «Oops» и «Revert Oops». Давайте удалим их с помощью сброса.</p>

<h2><em>03</em> Для начала отметьте эту ветку</h2>

<p>Но прежде чем удалить коммиты, давайте отметим последний коммит тегом, чтобы потом можно было его найти.</p>

<h4 class="h4-pre">Выполните:</h4>

<pre class="instructions">git tag oops</pre>

<h2><em>04</em> Сброс коммитов к предшествующим коммиту Oops</h2>

<p>Глядя на историю лога (см. выше), мы видим, что коммит с тегом «v1» является коммитом, предшествующим ошибочному коммиту. Давайте сбросим ветку до этой точки. Поскольку ветка имеет тег, мы можем использовать имя тега в команде сброса (если она не имеет тега, мы можем использовать хэш-значение).</p>

<h4 class="h4-pre">Выполните:</h4>

<pre class="instructions">git reset --hard v1
git hist</pre>

<h4 class="h4-pre">Результат:</h4>

<pre class="sample">$ git reset --hard v1
HEAD is now at fa3c141 Added HTML header
$ git hist
* fa3c141 2011-03-09 | Added HTML header (HEAD, v1, master) [Alexander Shvets]
* 8c32287 2011-03-09 | Added standard HTML page tags (v1-beta) [Alexander Shvets]
* 43628f7 2011-03-09 | Added h1 tag [Alexander Shvets]
* 911e8c9 2011-03-09 | First Commit [Alexander Shvets]</pre>

<p>Наша ветка master теперь указывает на коммит v1, а коммитов Oops и Revert Oops в ветке уже нет. Параметр <code>--hard</code> указывает, что рабочий каталог должен быть обновлен в соответствии с новым head ветки.</p>

<h2><em>05</em> Ничего никогда не теряется</h2>

<p>Что же случается с ошибочными коммитами? Оказывается, что коммиты все еще находятся в репозитории. На самом деле, мы все еще можем на них ссылаться. Помните, в начале этого урока мы создали для отмененного коммита тег «oops». Давайте посмотрим на <em>все</em> коммиты.</p>

<h4 class="h4-pre">Выполните:</h4>

<pre class="instructions">git hist --all</pre>

<h4 class="h4-pre">Результат:</h4>

<pre class="sample">$ git hist --all
* 45fa96b 2011-03-09 | Revert "Oops, we didn't want this commit" (oops) [Alexander Shvets]
* 846b90c 2011-03-09 | Oops, we didn't want this commit [Alexander Shvets]
* fa3c141 2011-03-09 | Added HTML header (HEAD, v1, master) [Alexander Shvets]
* 8c32287 2011-03-09 | Added standard HTML page tags (v1-beta) [Alexander Shvets]
* 43628f7 2011-03-09 | Added h1 tag [Alexander Shvets]
* 911e8c9 2011-03-09 | First Commit [Alexander Shvets]</pre>

<p>Мы видим, что ошибочные коммиты не исчезли. Они все еще находятся в репозитории. Просто они отсутствуют в ветке <code>master</code>. Если бы мы не отметили их тегами, они по-прежнему находились бы в репозитории, но не было бы никакой возможности ссылаться на них, кроме как при помощи их хэш имен. Коммиты, на которые нет ссылок, остаются в репозитории до тех пор, пока не будет запущен сборщик мусора.</p>

<h2><em>06</em> Опасность сброса</h2>

<p>Сброс в локальных ветках, как правило, безопасен. Последствия любой «аварии» как правило, можно восстановить простым сбросом с помощью нужного коммита.</p>

<p>Однако, если ветка «расшарена» на удаленных репозиториях, сброс может сбить с толку других пользователей ветки.</p>


        
        <nav class="prev-next">
                    <div class="next">
                <a href="remove_the_oops_tag.htm" class="btn">18. Удаление тега oops <span class="fa fa-arrow-right"></span></a>
            </div>
                            <div class="prev">
                <a href="undoing_committed_changes.htm" class="btn"><span class="fa fa-arrow-left"></span> 16. Отмена коммитов </a>
            </div>
            </nav>
    </div>
</article>

<div class="site-index row" style="display: none;">
    <div class="row">
        <div class="col-sm-3">
            <ul>
                                                <li class="leaf"><a href="setup.htm">1. Подготовка</a></li>
                                                    <li class="leaf"><a href="more_setup.htm">2. Финальные приготовления</a></li>
                                                    <li class="leaf"><a href="create_a_project.htm">3. Создание проекта</a></li>
                                                    <li class="leaf"><a href="checking_status.htm">4. Проверка состояния</a></li>
                                                    <li class="leaf"><a href="making_changes.htm">5. Внесение изменений</a></li>
                                                    <li class="leaf"><a href="staging_changes.htm">6. Индексация изменений</a></li>
                                                    <li class="leaf"><a href="staging_and_committing.htm">7. Индексация и коммит</a></li>
                                                    <li class="leaf"><a href="commiting_changes.htm">8. Коммит изменений</a></li>
                                                    <li class="leaf"><a href="changes_not_files.htm">9. Изменения, а не файлы</a></li>
                                                    <li class="leaf"><a href="history.htm">10. История</a></li>
                                                    <li class="leaf"><a href="aliases.htm">11. Алиасы</a></li>
                                                    <li class="leaf"><a href="getting_old_versions.htm">12. Получение старых версий</a></li>
                                                    <li class="leaf"><a href="tagging_versions.htm">13. Создание тегов версий</a></li>
                                                    </ul>
        </div>
        <div class="col-sm-3">
            <ul>
                        <li class="leaf"><a href="undoing_local_changes.htm">14. Отмена локальных изменений (до индексации)</a></li>
                                                    <li class="leaf"><a href="undoing_staged_changes.htm">15. Отмена проиндексированных изменений (перед коммитом)</a></li>
                                                    <li class="leaf"><a href="undoing_committed_changes.htm">16. Отмена коммитов</a></li>
                                                    <li class="leaf"><a href="removing_commits_from_a_branch.htm">17. Удаление коммитов из ветки</a></li>
                                                    <li class="leaf"><a href="remove_the_oops_tag.htm">18. Удаление тега oops</a></li>
                                                    <li class="leaf"><a href="amending_commits.htm">19. Внесение изменений в коммиты</a></li>
                                                    <li class="leaf"><a href="moving_files.htm">20. Перемещение файлов</a></li>
                                                    <li class="leaf"><a href="more_structure.htm">21. Подробнее о структуре</a></li>
                                                    <li class="leaf"><a href="git_internals_git_directory.htm">22. Git внутри: Каталог .git</a></li>
                                                    <li class="leaf"><a href="git_internals_working_directly_with_git_objects.htm">23. Git внутри: Работа непосредственно с объектами git</a></li>
                                                    <li class="leaf"><a href="creating_a_branch.htm">24. Создание ветки</a></li>
                                                    <li class="leaf"><a href="navigating_branches.htm">25. Навигация по веткам</a></li>
                                                    <li class="leaf"><a href="changes_in_master.htm">26. Изменения в ветке master</a></li>
                                                    </ul>
        </div>
        <div class="col-sm-3">
            <ul>
                        <li class="leaf"><a href="viewing_diverging_branches.htm">27. Просмотр отличающихся веток</a></li>
                                                    <li class="leaf"><a href="merging.htm">28. Слияние</a></li>
                                                    <li class="leaf"><a href="creating_a_conflict.htm">29. Создание конфликта</a></li>
                                                    <li class="leaf"><a href="resolving_conflicts.htm">30. Разрешение конфликтов</a></li>
                                                    <li class="leaf"><a href="rebasing_vs_merging.htm">31. Перебазирование как альтернатива слиянию</a></li>
                                                    <li class="leaf"><a href="resetting_the_greet_branch.htm">32. Сброс ветки style</a></li>
                                                    <li class="leaf"><a href="resetting_the_master_branch.htm">33. Сброс ветки master</a></li>
                                                    <li class="leaf"><a href="rebasing.htm">34. Перебазирование</a></li>
                                                    <li class="leaf"><a href="merging_back_to_master.htm">35. Слияние в ветку master</a></li>
                                                    <li class="leaf"><a href="mutliple_repositories.htm">36. Несколько репозиториев</a></li>
                                                    <li class="leaf"><a href="cloningrepositories.htm">37. Клонирование репозиториев</a></li>
                                                    <li class="leaf"><a href="review_the_cloned_repository.htm">38. Просмотр клонированного репозитория</a></li>
                                                    <li class="leaf"><a href="what_is_origin.htm">39. Что такое origin?</a></li>
                                                    </ul>
        </div>
        <div class="col-sm-3">
            <ul>
                        <li class="leaf"><a href="remote_branches.htm">40. Удаленные ветки</a></li>
                                                    <li class="leaf"><a href="change_the_original_repository.htm">41. Изменение оригинального репозитория</a></li>
                                                    <li class="leaf"><a href="fetching_changes.htm">42. Извлечение изменений</a></li>
                                                    <li class="leaf"><a href="merging_pulled_changes.htm">43. Слияние извлеченных изменений</a></li>
                                                    <li class="leaf"><a href="pulling_changes.htm">44. Извлечение и слияние изменений</a></li>
                                                    <li class="leaf"><a href="adding_a_tracking_branch.htm">45. Добавление ветки наблюдения</a></li>
                                                    <li class="leaf"><a href="bare_repositories.htm">46. Чистые репозитории</a></li>
                                                    <li class="leaf"><a href="adding_a_remote_repository.htm">47. Добавление удаленного репозитория</a></li>
                                                    <li class="leaf"><a href="pushing_a_change.htm">48. Отправка изменений</a></li>
                                                    <li class="leaf"><a href="pulling_shared_changes.htm">49. Извлечение общих изменений</a></li>
                                                    <li class="leaf"><a href="hosting_your_git_repositories.htm">50. Размещение ваших git репозиториев</a></li>
                                                    <li class="leaf"><a href="sharing_repos.htm">51. Расшаривание репозиториев</a></li>
                                                    <li class="leaf"><a href="thank_you.htm">Спасибо!</a></li>
                                        </ul>
        </div>
    </div>
</div>    </div>
</div>




<script src="../release/js/output.min.js"></script>


</body>
</html>